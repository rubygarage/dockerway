version: '3'

volumes:
  assets:

services:
  web_server:
    image: YOUR_ECR_ID.dkr.ecr.us-east-1.amazonaws.com/spreeproject/web_server:staging
    volumes:
      - assets:/home/www/projectname/public/assets
    environment:
      ROOT_PATH: /home/www/projectname/public
    ports:
      - 80:8080
    links:
      - server_app
    logging:
      driver: awslogs
      options:
        awslogs-group: CLUSTER_NAME
        awslogs-region: us-east-1
        awslogs-stream-prefix: web_server
    healthcheck:
      test: ["CMD-SHELL", "service nginx status || exit 1"]

  server_app: &server_app
    image: YOUR_ECR_ID.dkr.ecr.us-east-1.amazonaws.com/spreeproject/server_app:staging
    command: bundle exec puma -C config/puma.rb
    entrypoint: "./docker-entrypoint.sh"
    ports:
      - 3000
    environment:
      RAILS_ENV: production
      RAILS_MASTER_KEY: YOUR_RAILS_MASTER_KEY
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: spreeproject_staging
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      REDIS_DB: "redis://in_memory_store:6379"
      SECRET_KEY_BASE: STUB
      DEVISE_SECRET_KEY: STUB
    volumes:
      - assets:/home/www/projectname/public/assets
    links:
      - db
      - in_memory_store
    logging:
      driver: awslogs
      options:
        awslogs-group: CLUSTER_NAME
        awslogs-region: us-east-1
        awslogs-stream-prefix: server_app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]

  worker_app:
    <<: *server_app
    command: bundle exec sidekiq -C config/sidekiq.yml
    entrypoint: ''
    logging:
      driver: awslogs
      options:
        awslogs-group: CLUSTER_NAME
        awslogs-region: us-east-1
        awslogs-stream-prefix: worker_app
    healthcheck:
      test: ["CMD-SHELL", "ps ax | grep -v grep | grep sidekiq || exit 1"]

  db:
    image: postgres:9.6
    environment:
      - POSTGRES_DB=spreeproject_staging
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - 5432
    volumes:
      - /postgres:/var/lib/postgresql/data
    logging:
      driver: awslogs
      options:
        awslogs-group: CLUSTER_NAME
        awslogs-region: us-east-1
        awslogs-stream-prefix: db
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]

  in_memory_store:
    image: redis:3.2-alpine
    ports:
      - 6379
    volumes:
      - /redis:/var/lib/redis/data
    logging:
      driver: awslogs
      options:
        awslogs-group: CLUSTER_NAME
        awslogs-region: us-east-1
        awslogs-stream-prefix: in_memory_store
    healthcheck:
      test: ["CMD", "redis-cli", "-h", "localhost", "ping"]
